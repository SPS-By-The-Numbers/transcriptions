# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup functions-python/venv
        working-directory: functions-python
        run: |
          python -m venv venv
          . venv/bin/activate
          python -m pip install -r requirements.txt

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list; npm --prefix functions list

      - name: Cache functions-python/venv
        id: cache-functions-python-venv
        uses: actions/cache@v4
        env:
          cache-name: cache-functions-python-venv
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: functions-python/venv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache firebase emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-${{ steps.cache-npm.outputs.firebase-tools }}

      # The action-hosting-deploy with the webframeworks does a build too but do it here
      # so tests can be run.
      - run: npm ci
      - run: npm run bootstrap
      - run: npm run build
      - run: npm test

      # Firebase webframeworks doesn't recur down into the functions directory.
      - run: npm --prefix functions ci
      - run: npm --prefix functions run bootstrap
      - run: npm --prefix functions run build
      - run: npm --prefix functions test

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SPS_BY_THE_NUMBERS }}
          projectId: sps-by-the-numbers
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
